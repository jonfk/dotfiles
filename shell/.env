
alias mmm='mvn clean install'

alias em='emacs'
alias emc='emacsclient'
alias ee='emacs -nw'

alias mi='mvn -T 2C install -Dmaven.test.skip=true -DskipTests'

alias uuidcp='uuidgen | tr "[:upper:]" "[:lower:]" | tr -d "\n" | pbcopy'

## Set default Editor
export VISUAL=vim
export EDITOR="$VISUAL"
export GIT_EDITOR=vim

export PATH=~/bin:$PATH


## GO lang stuff
export PATH=$PATH:/usr/local/go/bin
export GOROOT=/usr/local/go
export GOPATH=$HOME/Code/go
export PATH=$PATH:$GOPATH/bin

## Haskell stuff
export PATH=$HOME/.cabal/bin:$PATH
export PATH=.cabal-sandbox/bin:$PATH

## Rust lang stuff
source $HOME/.cargo/env
# export RUST_SRC_PATH="$HOME/Code/rust/rust-src/src/"
# using this requires install rust source component with : rustup component add rust-src
export RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"

## Python stuff
export PATH="/Users/jonathan.fokkan/Library/Python/3.6/bin:$PATH"

# where stack install binaries
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.stack/programs/x86_64-linux/ghc-7.8.4/bin:$PATH

# NodeJS
export PATH="$HOME/.yarn/bin:$PATH"

# training-log-analysis tools
export PATH=$PATH:$HOME/Code/projects/training-log-analysis/bin

# Git
alias gs='git status'
# g config --global --get alias.review
# run to get: git review
# git config --global alias.review '!f(){ git fetch $1 pull/$2/head;git checkout FETCH_HEAD;}; f'

# brew
export LIBRARY_PATH="$LIBRARY_PATH:/usr/local/lib"

own_vms() {
    chown -R $(whoami) /Users/Shared/VirtualBoxShared
    # chmod -R ug+rwx /Users/Shared/VirtualBoxShared
}

# https://unix.stackexchange.com/questions/210930/completions-stopped-working-after-upgrading-zsh
# https://stackoverflow.com/questions/26462667/git-completion-not-working-in-zsh-on-os-x-yosemite-with-homebrew
fix_completion_zsh() {
  rm ~/.zcompdump*
  autoload -U compinit && compinit
  autoload -U bashcompinit && bashcompinit
  zmodload -i zsh/complist
}

# init for pazi https://github.com/euank/pazi
if command -v pazi &>/dev/null; then
  eval "$(pazi init zsh)" # or 'bash'
fi

# kubernetes
if [ $commands[kubectl] ]; then source <(kubectl completion zsh); fi